// Copyright (c) Alaska Air. All right reserved. Licensed under the Apache-2.0 license
// See LICENSE in the project root for license information.

// ---------------------------------------------------------------------

// Creates ods-button CSS UI definition of shape


@import "./tokens/tokenVariables";
@import "./tokens/componentVariables";
@import "./tokens/dotsVariables";

@import "./tokens/tokenProperties";
@import "./tokens/componentProperties";
@import "./tokens/dotsProperties";

@import "./node_modules/@alaskaairux/orion-web-core-style-sheets/dist/utilityMixins/focusVisible";
@import "./node_modules/@alaskaairux/orion-web-core-style-sheets/dist/breakpoints";
@import "./node_modules/@alaskaairux/orion-web-core-style-sheets/dist/baselineLTE";
@import "./node_modules/@alaskaairux/orion-web-core-style-sheets/dist/animation";

// container
:host(.focus-visible) {
  .button {
    @include focus-button(css);

    &.button--classic:not(.button--secondary) {
      box-shadow: inset 0 0 0 5px $color-base-white;
    }
  }
}

// Properties in :host require Sass variables
// CSS custom properties are not loaded where the :host selector can see them.
:host {
  display: $host-display;
  flex-direction: $host-flex-direction-mobile;
  -webkit-tap-highlight-color: transparent;

  @include breakpoint-narrow {
    flex-direction: $host-flex-direction-phone-large-and-above;
  }
}

// layout
span {
  display: inline-block;
}

// button shape
.button {
  @include transition;

  @include breakpoint-narrow {
    width: var(--ods-button-width-medium);
    padding: var(--ods-button-vertical-padding) var(--ods-button-horizontal-padding-medium);
  }

  &:first-letter {
    text-transform: uppercase;
  }

  user-select: none;
  display: var(--ods-button-display);
  font-family: var(--ods-button-font-family);
  border-width: var(--ods-button-border-width);
  border-style: var(--ods-button-border-style);
  border-color: var(--ods-button-border-color);
  border-radius: var(--ods-button-border-radius);
  font-size: var(--ods-button-font-size);
  font-weight: var(--ods-button-font-weight);
  line-height: var(--ods-button-height);
  padding: var(--ods-button-vertical-padding) var(--ods-button-horizontal-padding-narrow);
  width: var(--ods-button-width-narrow);
  background-color: var(--ods-button-background-color);
  color: var(--ods-button-text-color);
  cursor: var(--ods-button-cursor);

  white-space: var(--ods-button-white-space);
  overflow: var(--ods-button-overflow);
  text-overflow: var(--ods-button-text-overflow);

  // reference :host selector for .is-touching state selector
  // only use hover UI if non-touch scenario
  :host(:not(.is-touching)) & {
    &:hover {
      color: var(--ods-button-hover-color);
      background-color: var(--ods-button-hover-background-color);
      box-shadow: 0 0 16px var(--ods-button-hover-shadow-color);
    }
  }

  &:disabled {
    cursor: var(--ods-button-disabled-cursor);
    color: var(--ods-button-disabled-color);
    border-color: var(--ods-button-disabled-border-color);
    background-color: var(--ods-button-disabled-background-color);

    :host(:not(.is-touching)) & {
      &:hover {
        background-color: var(--ods-button-disabled-hover-background-color);
        box-shadow: 0 0 0 transparent;
        color: var(--ods-button-disabled-hover-color);
      }
    }

    &:active {
      color: var(--ods-button-disabled-color);
      background-color: var(--ods-button-disabled-background-color);
    }
  }

  &:active {
    background-color: var(--ods-button-active-background-color);
  }

  &.is-active {
    &:disabled {
      cursor: var(--ods-button-disabled-cursor);
      color: var(--ods-button-is-active-disabled-color);
      background-color: var(--ods-button-is-active-disabled-background-color);

      :host(:not(.is-touching)) & {
        &:hover {
          background-color: var(--ods-button-is-active-disabled-background-color);
          color: var(--ods-button-is-active-disabled-color);
        }
      }
    }
  }

  &--condensed {
    padding: var(--ods-button-vertical-padding) var(--ods-button-horizontal-padding-narrow);
  }

  &--enclosed {
    @include breakpoint-narrow {
      width: var(--ods-button-width-narrow) !important;
    }
  }

  &--complete {
    background-color: var(--ods-button-complete-background-color);
    color: var(--ods-button-complete-color);
    border-color: var(--ods-button-complete-background-color);

    .block {
      background-color: var(--dancingdots-block-complete-background-color);
    }

    &.is-active {
      &:disabled {
        background-color: var(--ods-button-complete-background-color);
        color: var(--ods-button-complete-color);
        border-color: var(--ods-button-complete-background-color);

        :host(:not(.is-touching)) & {
          &:hover {
            background-color: var(--ods-button-complete-background-color);
            color: var(--ods-button-complete-color);
          }
        }
      }
    }

    :host(:not(.is-touching)) & {
      &:hover {
        background-color: var(--ods-button-complete-hover-background-color);
        color: var(--ods-button-complete-color);
      }
    }
  }

  &--secondary {
    background-color: var(--ods-button-secondary-background-color);
    border: var(--ods-button-secondary-border-width) var(--ods-button-secondary-border-style) var(--ods-button-secondary-border-color);
    color: var(--ods-button-secondary-color);

    &:active {
      color: var(--ods-button-secondary-active-color);
      border-color: var(--ods-button-secondary-active-border-color);
      background-color: var(--ods-button-secondary-active-background-color)
    }

    :host(:not(.is-touching)) & {
      &:hover {
        background-color: var(--ods-button-secondary-hover-background-color);
        box-shadow: 0 0 16px var(--ods-button-secondary-hover-shadow-color);
        border-color: var(--ods-button-secondary-hover-border-color);
        color: var(--ods-button-secondary-hover-text-color);
      }
    }

    &:disabled {
      cursor: var(--ods-button-disabled-cursor);
      color: var(--ods-button-disabled-color);
      border-color: var(--ods-button-secondary-disabled-border-color);
      background-color: var(--ods-button-secondary-disabled-background-color);

      :host(:not(.is-touching)) & {
        &:hover {
          border-color: var(--ods-button-secondary-disabled-hover-border-color);
          background-color: var(--ods-button-secondary-disabled-hover-background-color);
          color: var(--ods-button-disabled-color);
          box-shadow: 0 0 0 transparent;
        }
      }
    }

    &.is-active {
      &:disabled {
        color: var(--ods-button-secondary-is-active-disabled-color);
        border-color: var(--ods-button-secondary-is-active-disabled-border-color);
        background-color: var(--ods-button-secondary-is-active-disabled-background-color);

        :host(:not(.is-touching)) & {
          &:hover {
            background-color: var(--ods-button-secondary-is-active-disabled-hover-background-color);
            border-color: var(--ods-button-secondary-is-active-disabled-border-color);
            color: var(--ods-button-secondary-is-active-disabled-color);
          }
        }
      }
    }
  }

  &--classic {
    $classShadow: 0 0 3px 0 rgba(0,0,0,.35);

    display: inline-block;
    text-transform: uppercase;
    font-size: $size-scale-classic;
    font-weight: 700;
    border-radius: 0;
    border-width: 2px;
    background-color: $color-classic-cta-green;
    border-color: $color-classic-cta-green;
    box-shadow: $classShadow;

    &.button {
      &--secondary {
        background-color: $color-base-white;
        border-color: var(--ods-button-secondary-border-color);

        &:disabled {
          border-color: var(--ods-button-disabled-border-color);

          :host(:not(.is-touching)) & {
            &:hover {
              background-color: inherit;
              color: var(--ods-button-disabled-color);
            }
          }
        }

        &.is-active {
          &:disabled {
            background-color: $color-base-white;
            border-color: var(--ods-button-secondary-border-color);

            :host(:not(.is-touching)) & {
              &:hover {
                background-color: $color-base-white;
                color: var(--ods-button-secondary-is-active-disabled-color);
                border-color: var(--ods-button-secondary-is-active-disabled-color);
              }
            }
          }
        }

        :host(:not(.is-touching)) & {
          &:hover {
            color: $color-brand-blue-midnight-base;
            background-color: $color-base-cloud;
            border-color: var(--ods-button-secondary-border-color);
          }
        }
      }
    }

    &:disabled {
      box-shadow: none;

      :host(:not(.is-touching)) & {
        &:hover {
          border-color: var(--ods-button-disabled-background-color);
        }
      }
    }

    &.is-active {
      &:disabled {
        background-color: $color-classic-cta-green;
        border-color: $color-classic-cta-green;
        box-shadow: $classShadow;

        :host(:not(.is-touching)) & {
          &:hover {
            background-color: $color-classic-cta-green;
            border-color: $color-classic-cta-green;
            box-shadow: $classShadow;
          }
        }
      }
    }

    :host(:not(.is-touching)) & {
      &:hover {
        background-color: $color-classic-cta-green-hover;
        border-color: $color-classic-cta-green-hover;
        box-shadow: $classShadow;
      }
    }
  }
}

// dancing dots
.dancingDots {
  display: var(--dancingdots-display);

  &.is-active {
    display: var(--dancingdots-is-active-display);
  }
}

.dots {
  display: var(--dancingdots-dots-display);
}

.block {
  display: var(--dancingdots-dots-display);
  width: var(--dancingdots-block-width);
  height: var(--dancingdots-block-height);
  margin: var(--dancingdots-block-margin);
  opacity: var(--dancingdots-block-opacity);
  background-color: var(--dancingdots-block-background-color);

  .button--secondary & {
    background-color: var(--dancingdots-block-secondary-background-color);
  }

  &:nth-child(1) {
    animation: var(--dancingdots-animation-name)
      var(--dancingdots-animation-duration)
      var(--dancingdots-animation-timing-function)
      var(--dancingdots-animation-iteration-count);
  }
  &:nth-child(2) {
    animation: var(--dancingdots-animation-name)
      var(--dancingdots-animation-duration)
      var(--dancingdots-animation-delay-child-two)
      var(--dancingdots-animation-timing-function)
      var(--dancingdots-animation-iteration-count);
  }
  &:nth-child(3) {
    animation: var(--dancingdots-animation-name)
      var(--dancingdots-animation-duration)
      var(--dancingdots-animation-delay-child-three)
      var(--dancingdots-animation-timing-function)
      var(--dancingdots-animation-iteration-count);
  }
}

@keyframes #{$dancingdots-animation-name} {
  #{$dancingdots-keyframe-step-1-name}% {
    transform: var(--dancingdots-keyframe-step-1-transform);
    opacity: var(--dancingdots-keyframe-step-1-opacity);
  }
  #{$dancingdots-keyframe-step-2-name}% {
    transform: var(--dancingdots-keyframe-step-2-transform);
    opacity: var(--dancingdots-keyframe-step-2-opacity);
  }
  #{$dancingdots-keyframe-step-3-name}% {
    transform: var(--dancingdots-keyframe-step-3-transform);
    opacity: var(--dancingdots-keyframe-step-3-opacity);
  }
  #{$dancingdots-keyframe-step-4-name}% {
    opacity: var(--dancingdots-keyframe-step-4-opacity);
  }
}
